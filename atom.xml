<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TheValuePoint&#39;s Blog</title>
  
  <subtitle>欢迎来到theValuePoint的博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-18T15:19:17.477Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>theValuePoint</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ML#0.1 NumPy Basics Arrays and Vectorized Computation</title>
    <link href="http://example.com/2024/10/18/ML-0-1-NumPy-Basics-Arrays-and-Vectorized-Computation/"/>
    <id>http://example.com/2024/10/18/ML-0-1-NumPy-Basics-Arrays-and-Vectorized-Computation/</id>
    <published>2024-10-18T14:57:11.000Z</published>
    <updated>2024-10-18T15:19:17.477Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>[!NOTE] 注意<br>本章大篇幅引用<a href="https://wesmckinney.com/book">Pyhon for Data Analysis,Third Edition,Wes McKinney</a>，仅作为学习交流使用。<br><br>本章<strong>默认</strong>进行如下操作：<br><br><code>import numpy as np</code><br><br><code>import pandas as pd</code></p></blockquote><h1>1 NumPy Basics: Arrays and Vectorized Computation</h1><blockquote><p><strong>NumPy</strong>, short for Numerical Python, is one of the most important foundational packages for numerical computing in Python.</p></blockquote><h2 id="The-NumPy-ndarray-A-Multidimensional-Array-Object">The NumPy ndarray: A Multidimensional Array Object</h2><p>Creating ndarrays:<code>arr1 = np.array(data1)</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">22</span>]: data2 = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]]</span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: arr2 = np.array(data2)</span><br><span class="line"></span><br><span class="line">In [<span class="number">24</span>]: arr2</span><br><span class="line">Out[<span class="number">24</span>]: </span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">25</span>]: arr2.ndim <span class="comment"># 查看数组维度</span></span><br><span class="line">Out[<span class="number">25</span>]: <span class="number">2</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">26</span>]: arr2.shape <span class="comment"># 查看数组形状</span></span><br><span class="line">Out[<span class="number">26</span>]: (<span class="number">2</span>, <span class="number">4</span>)</span><br></pre></td></tr></tbody></table></figure><p>0s,1s,Trues:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.zeros(<span class="number">10</span>)</span><br><span class="line">np.empty((<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>))</span><br><span class="line">np.full((<span class="number">3</span>, <span class="number">3</span>), <span class="literal">True</span>, dtype=<span class="built_in">bool</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="Data-Types-for-ndarrays">Data Types for ndarrays</h2><p><a href="https://wesmckinney.com/book/numpy-basics#tbl-table_array_dtypes">Numpy的数据类型链接</a></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">33</span>]: arr1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], dtype=np.float64)</span><br><span class="line"></span><br><span class="line">In [<span class="number">34</span>]: arr2 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], dtype=np.int32)</span><br><span class="line"></span><br><span class="line">In [<span class="number">35</span>]: arr1.dtype</span><br><span class="line">Out[<span class="number">35</span>]: dtype(<span class="string">'float64'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">36</span>]: arr2.dtype</span><br><span class="line">Out[<span class="number">36</span>]: dtype(<span class="string">'int32'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">37</span>]: arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">38</span>]: arr.dtype</span><br><span class="line">Out[<span class="number">38</span>]: dtype(<span class="string">'int64'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">39</span>]: float_arr = arr.astype(np.float64) <span class="comment"># 转换另一种数据类型</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">40</span>]: float_arr</span><br><span class="line">Out[<span class="number">40</span>]: array([<span class="number">1.</span>, <span class="number">2.</span>, <span class="number">3.</span>, <span class="number">4.</span>, <span class="number">5.</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">41</span>]: float_arr.dtype</span><br><span class="line">Out[<span class="number">41</span>]: dtype(<span class="string">'float64'</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="Indexing-and-Slicing">Indexing and Slicing</h2><h3 id="Boolean-Indexing">Boolean Indexing</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">100</span>]: names = np.array([<span class="string">"Bob"</span>, <span class="string">"Joe"</span>, <span class="string">"Will"</span>, <span class="string">"Bob"</span>, <span class="string">"Will"</span>, <span class="string">"Joe"</span>, <span class="string">"Joe"</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">101</span>]: data = np.array([[<span class="number">4</span>, <span class="number">7</span>], [<span class="number">0</span>, <span class="number">2</span>], [-<span class="number">5</span>, <span class="number">6</span>], [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">   .....:                  [-<span class="number">12</span>, -<span class="number">4</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">102</span>]: names</span><br><span class="line">Out[<span class="number">102</span>]: array([<span class="string">'Bob'</span>, <span class="string">'Joe'</span>, <span class="string">'Will'</span>, <span class="string">'Bob'</span>, <span class="string">'Will'</span>, <span class="string">'Joe'</span>, <span class="string">'Joe'</span>], dtype=<span class="string">'&lt;U4'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">103</span>]: data</span><br><span class="line">Out[<span class="number">103</span>]: </span><br><span class="line">array([[  <span class="number">4</span>,   <span class="number">7</span>],</span><br><span class="line">       [  <span class="number">0</span>,   <span class="number">2</span>],</span><br><span class="line">       [ -<span class="number">5</span>,   <span class="number">6</span>],</span><br><span class="line">       [  <span class="number">0</span>,   <span class="number">0</span>],</span><br><span class="line">       [  <span class="number">1</span>,   <span class="number">2</span>],</span><br><span class="line">       [-<span class="number">12</span>,  -<span class="number">4</span>],</span><br><span class="line">       [  <span class="number">3</span>,   <span class="number">4</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Boolean Array</span></span><br><span class="line">In [<span class="number">104</span>]: names == <span class="string">"Bob"</span></span><br><span class="line">Out[<span class="number">104</span>]: array([ <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">105</span>]: data[names == <span class="string">"Bob"</span>]</span><br><span class="line">Out[<span class="number">105</span>]: </span><br><span class="line">array([[<span class="number">4</span>, <span class="number">7</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">0</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">106</span>]: data[names == <span class="string">"Bob"</span>, <span class="number">1</span>:]</span><br><span class="line">Out[<span class="number">106</span>]: </span><br><span class="line">array([[<span class="number">7</span>],</span><br><span class="line">       [<span class="number">0</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">107</span>]: data[names == <span class="string">"Bob"</span>, <span class="number">1</span>]</span><br><span class="line">Out[<span class="number">107</span>]: array([<span class="number">7</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">111</span>]: cond = names == <span class="string">"Bob"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The ~ operator can be useful when you want to invert a Boolean array referenced by a variable</span></span><br><span class="line">In [<span class="number">112</span>]: data[~cond]</span><br><span class="line">Out[<span class="number">112</span>]: </span><br><span class="line">array([[  <span class="number">0</span>,   <span class="number">2</span>],</span><br><span class="line">       [ -<span class="number">5</span>,   <span class="number">6</span>],</span><br><span class="line">       [  <span class="number">1</span>,   <span class="number">2</span>],</span><br><span class="line">       [-<span class="number">12</span>,  -<span class="number">4</span>],</span><br><span class="line">       [  <span class="number">3</span>,   <span class="number">4</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># To select two of the three names to combine multiple Boolean conditions, use Boolean arithmetic operators like &amp; (and) and | (or)</span></span><br><span class="line">In [<span class="number">113</span>]: mask = (names == <span class="string">"Bob"</span>) | (names == <span class="string">"Will"</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">114</span>]: mask</span><br><span class="line">Out[<span class="number">114</span>]: array([ <span class="literal">True</span>, <span class="literal">False</span>,  <span class="literal">True</span>,  <span class="literal">True</span>,  <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">115</span>]: data[mask]</span><br><span class="line">Out[<span class="number">115</span>]: </span><br><span class="line">array([[ <span class="number">4</span>,  <span class="number">7</span>],</span><br><span class="line">       [-<span class="number">5</span>,  <span class="number">6</span>],</span><br><span class="line">       [ <span class="number">0</span>,  <span class="number">0</span>],</span><br><span class="line">       [ <span class="number">1</span>,  <span class="number">2</span>]])</span><br></pre></td></tr></tbody></table></figure><h3 id="Fancy-Indexing">Fancy Indexing</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">120</span>]: arr = np.zeros((<span class="number">8</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">121</span>]: <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">   .....:     arr[i] = i</span><br><span class="line"></span><br><span class="line">In [<span class="number">122</span>]: arr</span><br><span class="line">Out[<span class="number">122</span>]: </span><br><span class="line">array([[<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">       [<span class="number">2.</span>, <span class="number">2.</span>, <span class="number">2.</span>, <span class="number">2.</span>],</span><br><span class="line">       [<span class="number">3.</span>, <span class="number">3.</span>, <span class="number">3.</span>, <span class="number">3.</span>],</span><br><span class="line">       [<span class="number">4.</span>, <span class="number">4.</span>, <span class="number">4.</span>, <span class="number">4.</span>],</span><br><span class="line">       [<span class="number">5.</span>, <span class="number">5.</span>, <span class="number">5.</span>, <span class="number">5.</span>],</span><br><span class="line">       [<span class="number">6.</span>, <span class="number">6.</span>, <span class="number">6.</span>, <span class="number">6.</span>],</span><br><span class="line">       [<span class="number">7.</span>, <span class="number">7.</span>, <span class="number">7.</span>, <span class="number">7.</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">123</span>]: arr[[<span class="number">4</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>]]</span><br><span class="line">Out[<span class="number">123</span>]: </span><br><span class="line">array([[<span class="number">4.</span>, <span class="number">4.</span>, <span class="number">4.</span>, <span class="number">4.</span>],</span><br><span class="line">       [<span class="number">3.</span>, <span class="number">3.</span>, <span class="number">3.</span>, <span class="number">3.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">6.</span>, <span class="number">6.</span>, <span class="number">6.</span>, <span class="number">6.</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment">#  Using negative indices selects rows from the end</span></span><br><span class="line">In [<span class="number">124</span>]: arr[[-<span class="number">3</span>, -<span class="number">5</span>, -<span class="number">7</span>]]</span><br><span class="line">Out[<span class="number">124</span>]: </span><br><span class="line">array([[<span class="number">5.</span>, <span class="number">5.</span>, <span class="number">5.</span>, <span class="number">5.</span>],</span><br><span class="line">       [<span class="number">3.</span>, <span class="number">3.</span>, <span class="number">3.</span>, <span class="number">3.</span>],</span><br><span class="line">       [<span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]])</span><br></pre></td></tr></tbody></table></figure><h2 id="Pseudorandom-Number-Generation">Pseudorandom Number Generation</h2><p>引用自:<a href="https://wesmckinney.com/book/numpy-basics#tbl-table_numpy_random">NumPy random number generator methods</a></p><p>Numpy.Random API reference:<a href="https://numpy.org/doc/stable/reference/random/index.html">https://numpy.org/doc/stable/reference/random/index.html</a></p><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>permutation</td><td>Return a random permutation of a sequence, or return a permuted range</td></tr><tr><td>shuffle</td><td>Randomly permute a sequence in place</td></tr><tr><td>uniform</td><td>Draw samples from a uniform distribution</td></tr><tr><td>integers</td><td>Draw random integers from a given low-to-high range</td></tr><tr><td>standard_normal</td><td>Draw samples from a normal distribution with mean 0 and standard deviation 1</td></tr><tr><td>binomial</td><td>Draw samples from a binomial distribution</td></tr><tr><td>normal</td><td>Draw samples from a normal (Gaussian) distribution</td></tr><tr><td>beta</td><td>Draw samples from a beta distribution</td></tr><tr><td>chisquare</td><td>Draw samples from a chi-square distribution</td></tr><tr><td>gamma</td><td>Draw samples from a gamma distribution</td></tr><tr><td>uniform</td><td>Draw samples from a uniform [0, 1) distribution</td></tr></tbody></table><h2 id="Universal-Functions">Universal Functions</h2><p>Numpy API reference:<a href="https://numpy.org/doc/stable/reference/ufuncs.html">https://numpy.org/doc/stable/reference/ufuncs.html</a></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;[!NOTE] 注意&lt;br&gt;
本章大篇幅引用&lt;a href=&quot;https://wesmckinney.com/book&quot;&gt;Pyhon for Data Analysis,Third Edition,Wes McKinney&lt;/a&gt;，仅作为学习交流使</summary>
      
    
    
    
    <category term="Machine Learning Notes" scheme="http://example.com/categories/Machine-Learning-Notes/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>My_First_Blog</title>
    <link href="http://example.com/2024/09/25/My-First-Blog/"/>
    <id>http://example.com/2024/09/25/My-First-Blog/</id>
    <published>2024-09-25T09:51:44.000Z</published>
    <updated>2024-09-25T09:54:43.085Z</updated>
    
    <content type="html"><![CDATA[<h1>这是我的第一条Blog！！！</h1><p>话说换硬盘真是麻烦。再加上我还只是个小白（悲），所以只能重新再来一遍。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;这是我的第一条Blog！！！&lt;/h1&gt;
&lt;p&gt;话说换硬盘真是麻烦。再加上我还只是个小白（悲），所以只能重新再来一遍。&lt;/p&gt;
&lt;hr&gt;
</summary>
      
    
    
    
    
    <category term="Daily" scheme="http://example.com/tags/Daily/"/>
    
  </entry>
  
</feed>
